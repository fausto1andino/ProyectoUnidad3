{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\faust\\\\Desktop\\\\PrograWebTG3\\\\src\\\\components\\\\Popular\\\\Popular.js\",\n    _s = $RefreshSig$();\n\n/** @jsxImportSource @emotion/react */\nimport { css, jsx } from \"@emotion/core\";\nimport { useContext, useState } from \"react\";\nimport { MovieContext } from \"../../Context/MovieContext\";\nimport Container from \"../GlobalComponents/Container\";\nimport movieTrailer from \"movie-trailer\";\nimport YouTube from \"react-youtube\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\n\nconst PopularMovies = () => {\n  _s();\n\n  const {\n    popularMovies\n  } = useContext(MovieContext);\n  const [trailerUrl, setTrailerUrl] = useState(MovieContext);\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      autoplay: 1\n    }\n  };\n\n  const handleClick = popularMovies => {\n    if (trailerUrl) {\n      setTrailerUrl(\"\");\n    } else {\n      movieTrailer((popularMovies === null || popularMovies === void 0 ? void 0 : popularMovies.name) || \"\").then(url => {\n        const urlParams = new URLSearchParams(new URL(url).search);\n        setTrailerUrl(urlParams.get(\"v\"));\n      }).catch(error => console.log(error));\n    }\n  };\n\n  return _jsxDEV(\"div\", {\n    css: styles,\n    className: \"popularMovies\",\n    children: _jsxDEV(Container, {\n      children: [popularMovies.results && popularMovies.results.map((popularMovieItem, index) => _jsxDEV(\"img\", {\n        onClick: () => handleClick(popularMovieItem),\n        src: `https://image.tmdb.org/t/p/w400/${popularMovieItem.poster_path}`,\n        alt: \"poster\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)), trailerUrl && _jsxDEV(YouTube, {\n        videoId: trailerUrl,\n        opts: opts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PopularMovies, \"LsCObfOYEM0M6c8JfiQEjk6sXP8=\");\n\n_c = PopularMovies;\nconst styles = css`\n  width: 100%;\n  .container {\n    &:nth-child(1) {\n      height: 81vh;\n      overflow-y: scroll;\n      display: flex;\n      justify-content: space-between;\n      flex-wrap: wrap;\n      &::-webkit-scrollbar {\n        width: 0;\n      }\n      .error {\n        font-size: 38px;\n        color: red;\n        height: 32px;\n      }\n    }\n    img {\n      width: 100%;\n      max-width: 240px;\n      height: 360px;\n      margin: 10px 0;\n    }\n    img:hover{\n      border:1px solid #2d21cc;\n      box-shadow: 0 0.5em 0.5em 1px #dc8dff;\n    }\n  }\n  @media (max-width: 600px) {\n    .container {\n      img {\n        max-width: 100%;\n        height: 500px;\n      }\n    }\n  }\n  @media (min-width: 601px) and (max-width: 854px) {\n    .container {\n      img {\n        max-width: 48%;\n      }\n    }\n  }\n  @media (min-width: 855px) and (max-width: 1144px) {\n    .container {\n      img {\n        max-width: 31%;\n      }\n    }\n  }\n  @media (min-width: 1145px) and (max-width: 1365px) {\n    .container {\n      img {\n        max-width: 23.4%;\n      }\n    }\n  }\n`;\nexport default PopularMovies;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopularMovies\");","map":{"version":3,"sources":["C:/Users/faust/Desktop/PrograWebTG3/src/components/Popular/Popular.js"],"names":["css","jsx","useContext","useState","MovieContext","Container","movieTrailer","YouTube","PopularMovies","popularMovies","trailerUrl","setTrailerUrl","opts","height","width","playerVars","autoplay","handleClick","name","then","url","urlParams","URLSearchParams","URL","search","get","catch","error","console","log","styles","results","map","popularMovieItem","index","poster_path"],"mappings":";;;AAAA;AACA,SAASA,GAAT,EAAcC,GAAd,QAAyB,eAAzB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAOC,OAAP,MAAoB,eAApB;;;AAIA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAoBP,UAAU,CAACE,YAAD,CAApC;AACA,QAAK,CAACM,UAAD,EAAaC,aAAb,IAA6BR,QAAQ,CAACC,YAAD,CAA1C;AAEA,QAAMQ,IAAI,GAAG;AACXC,IAAAA,MAAM,EAAC,KADI;AAEXC,IAAAA,KAAK,EAAC,MAFK;AAGXC,IAAAA,UAAU,EAAE;AACXC,MAAAA,QAAQ,EAAE;AADC;AAHD,GAAb;;AAOD,QAAMC,WAAW,GAAIR,aAAD,IAAkB;AACrC,QAAIC,UAAJ,EAAe;AACXC,MAAAA,aAAa,CAAC,EAAD,CAAb;AACH,KAFD,MAEK;AACDL,MAAAA,YAAY,CAAC,CAAAG,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAES,IAAf,KAAuB,EAAxB,CAAZ,CACCC,IADD,CACMC,GAAG,IAAG;AACR,cAAMC,SAAS,GAAG,IAAIC,eAAJ,CAAqB,IAAIC,GAAJ,CAAQH,GAAR,EAAaI,MAAlC,CAAlB;AACAb,QAAAA,aAAa,CAACU,SAAS,CAACI,GAAV,CAAc,GAAd,CAAD,CAAb;AACH,OAJD,EAKCC,KALD,CAKQC,KAAD,IAAUC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CALjB;AAMH;AACF,GAXA;;AAaC,SACE;AAAK,IAAA,GAAG,EAAEG,MAAV;AAAkB,IAAA,SAAS,EAAC,eAA5B;AAAA,cAEE,QAAC,SAAD;AAAA,iBACGrB,aAAa,CAACsB,OAAd,IACCtB,aAAa,CAACsB,OAAd,CAAsBC,GAAtB,CAA0B,CAACC,gBAAD,EAAmBC,KAAnB,KACxB;AAEE,QAAA,OAAO,EAAE,MAAKjB,WAAW,CAACgB,gBAAD,CAF3B;AAGE,QAAA,GAAG,EAAG,mCAAkCA,gBAAgB,CAACE,WAAY,EAHvE;AAIE,QAAA,GAAG,EAAC;AAJN,SACOD,KADP;AAAA;AAAA;AAAA;AAAA,cADF,CAFJ,EAUMxB,UAAU,IAAI,QAAC,OAAD;AAAS,QAAA,OAAO,EAAEA,UAAlB;AAA8B,QAAA,IAAI,EAAEE;AAApC;AAAA;AAAA;AAAA;AAAA,cAVpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CA5CD;;GAAMJ,a;;KAAAA,a;AA8CN,MAAMsB,MAAM,GAAG9B,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA1DA;AA4DA,eAAeQ,aAAf","sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { css, jsx } from \"@emotion/core\";\nimport { useContext, useState } from \"react\";\nimport { MovieContext } from \"../../Context/MovieContext\";\nimport Container from \"../GlobalComponents/Container\";\nimport movieTrailer from \"movie-trailer\";\nimport YouTube from \"react-youtube\";\n\n\n\nconst PopularMovies = () => {\n  const { popularMovies } = useContext(MovieContext);\n  const[trailerUrl, setTrailerUrl]= useState(MovieContext);\n\n  const opts = {\n    height:\"390\",\n    width:\"100%\",\n    playerVars: {\n     autoplay: 1,\n    },\n };\n const handleClick = (popularMovies) =>{\n  if (trailerUrl){\n      setTrailerUrl(\"\");\n  }else{\n      movieTrailer(popularMovies?.name || \"\")\n      .then(url =>{\n          const urlParams = new URLSearchParams (new URL(url).search);\n          setTrailerUrl(urlParams.get(\"v\"));\n      })\n      .catch((error)=> console.log(error))\n  }\n}\n\n  return (\n    <div css={styles} className=\"popularMovies\">\n     \n      <Container>\n        {popularMovies.results &&\n          popularMovies.results.map((popularMovieItem, index) => (\n            <img\n              key={index}\n              onClick={()=> handleClick(popularMovieItem)}\n              src={`https://image.tmdb.org/t/p/w400/${popularMovieItem.poster_path}`}\n              alt=\"poster\"\n            />\n          ))}\n          { trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\n      </Container>\n      \n    </div>\n\n    \n  );\n};\n\nconst styles = css`\n  width: 100%;\n  .container {\n    &:nth-child(1) {\n      height: 81vh;\n      overflow-y: scroll;\n      display: flex;\n      justify-content: space-between;\n      flex-wrap: wrap;\n      &::-webkit-scrollbar {\n        width: 0;\n      }\n      .error {\n        font-size: 38px;\n        color: red;\n        height: 32px;\n      }\n    }\n    img {\n      width: 100%;\n      max-width: 240px;\n      height: 360px;\n      margin: 10px 0;\n    }\n    img:hover{\n      border:1px solid #2d21cc;\n      box-shadow: 0 0.5em 0.5em 1px #dc8dff;\n    }\n  }\n  @media (max-width: 600px) {\n    .container {\n      img {\n        max-width: 100%;\n        height: 500px;\n      }\n    }\n  }\n  @media (min-width: 601px) and (max-width: 854px) {\n    .container {\n      img {\n        max-width: 48%;\n      }\n    }\n  }\n  @media (min-width: 855px) and (max-width: 1144px) {\n    .container {\n      img {\n        max-width: 31%;\n      }\n    }\n  }\n  @media (min-width: 1145px) and (max-width: 1365px) {\n    .container {\n      img {\n        max-width: 23.4%;\n      }\n    }\n  }\n`;\n\nexport default PopularMovies;\n"]},"metadata":{},"sourceType":"module"}